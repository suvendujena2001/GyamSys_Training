@model StudentMvc.Models.Student

@{
    ViewData["Title"] = "Delete";
}

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Student</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Branch)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Branch)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.College)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.College)
        </dd>
    </dl>
    
    <form>
        <input type="hidden" asp-for="Id" />
        <input type="button" value="Delete" class="btn btn-danger" onclick="deleteStudent()" /> |
        <a asp-action="Index">Back to List</a>
    </form>
</div>
<script>
    function deleteStudent(){
        const raw = "";
        const id = $("#Id").val();
        const requestOptions = {
            method: "DELETE",
            body: raw,
            redirect: "follow"
        };

        fetch(`https://localhost:7088/api/StudentsApi/${id}`, requestOptions)
            .then((response) => {
                if (response.ok) {
                    // Redirect to the Index page after successful update
                    window.location.href = '/Students/Index';
                } else {
                    throw new Error('Failed to delete student data');
                }
            })
            .catch((error) => console.error(error));
    }
   
</script>